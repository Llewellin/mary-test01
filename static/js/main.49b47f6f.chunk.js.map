{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INTIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.49b47f6f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:3001'\r\n})","import { createBrowserHistory } from 'history'; \r\n\r\nexport default createBrowserHistory();","import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport {\r\n    SIGN_IN, \r\n    SIGN_OUT,\r\n     CREATE_STREAM,\r\n     FETCH_STREAMS,\r\n      FETCH_STREAM,\r\n     DELETE_STREAM,\r\n      EDIT_STREAM\r\n    } from './types';\r\n\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n    const { userId } = getState().auth;\r\n    const response = await streams.post('/streams', { ...formValues, userId });\r\n\r\n    dispatch({ type: CREATE_STREAM, payload: response.data});\r\n    \r\n    //some programmatic navigation to get the user back to the root route\r\n    history.push('/');\r\n\r\n}\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await streams.get('/streams');\r\n\r\n    dispatch({ type: FETCH_STREAMS, payload: response.data});\r\n}\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n    const response = await streams.get(`/streams/${[id]}`);\r\n\r\n    dispatch({ type: FETCH_STREAM, payload: response.data});\r\n}\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await streams.patch(`/streams ${id}`, formValues);\r\n\r\n    dispatch({ type: EDIT_STREAM, payload: response.data});\r\n    history.push('/');\r\n} \r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n     await streams.delete(`/streams ${id}`);\r\n\r\n    dispatch({ type: DELETE_STREAM, payload: id});\r\n    history.push('/');\r\n}","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM';\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\r\nexport const FETCH_STREAM = 'FETCH_STREAM';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const EDIT_STREAM = 'EDIT_STREAM';","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n//Code Reuse fro StreamCreate and StreamEdit\r\n\r\n\r\n\r\nclass StreamForm extends React.Component {\r\n    //how to show the error message\r\n    renderError ({ touched, error}) {\r\n         if(touched && error) {\r\n             return (\r\n                 <div className=\"ui error message\">\r\n                     <div className =\"header\">{error}</div>\r\n                 </div>\r\n             )\r\n         }\r\n    }\r\n \r\n\r\n     renderInput = ({ input, label, meta }) => {\r\n         //to show the error message and make the title/description read.\r\n        const className = `field ${meta.error && meta.touched ? 'error': ''}`\r\n         return (\r\n             <div className = {className}>\r\n                 <label>{label}</label>\r\n             <input {...input} autoComplete = \"off\" />\r\n                     {this.renderError(meta)}\r\n             </div>\r\n         )\r\n     }\r\n\r\n     onSubmit = (formValues) => {\r\n         this.props.onSubmit(formValues);\r\n     }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit = {this.props.handleSubmit(this.onSubmit)} \r\n                  className = \"ui form error\">\r\n            <Field name = \"title\" component = {this.renderInput} label = \"Enter Title\" />\r\n            <Field name = \"description\" component = {this.renderInput} label = \"Enter Description\" />\r\n            <button className= \"ui primary button\">Submit</button>\r\n            </form>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {}\r\n\r\n    if (!formValues.title) {\r\n        errors.title = 'You must put a title'\r\n    }\r\n    if (!formValues.description) {\r\n        errors.description = 'You must put a description'\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'StreamForm',\r\n    validate\r\n}) (StreamForm);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\n\r\n\r\nclass StreamCreate extends React.Component {\r\n     onSubmit = (formValues) => {\r\n         this.props.createStream(formValues);\r\n     }\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n               <h2>Create Stream</h2>\r\n               <StreamForm onSubmit={this.onSubmit} />\r\n           </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(null, {createStream})(StreamCreate);","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\n\r\nclass StreamEdit extends React.Component{\r\n     componentDidMount(){\r\n         this.props.fetchStream(this.props.match.params.id);\r\n     }\r\n\r\n     onSubmit = (formValues) => {\r\n       this.props.editStream(this.props.match.params.id, formValues);\r\n     }\r\n\r\n    render(){\r\n        if(!this.props.stream){\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n        <div>\r\n            <h2>Edit a Stream</h2>\r\n            <StreamForm initialValues ={_.pick(this.props.stream, 'title', 'description')}\r\n             onSubmit={this.onSubmit} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream, editStream}) (StreamEdit);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\nconst Modal = props => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e)=> e.stopPropagation()} className=\"ui standard modal visible active\">\r\n              <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">\r\n                   {props.content}\r\n                </div>\r\n               <div className=\"actions\">{props.actions}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream, deleteStream } from '../../actions';\r\n\r\n\r\n\r\n class StreamDelete extends React.Component{\r\n     componentDidMount(){\r\n         this.props.fetchStream(this.props.match.params.id);\r\n     }\r\n\r\n    renderActions(){\r\n        const { id }= this.props.match.params;\r\n        return (\r\n        <React.Fragment>\r\n            <button onClick={()=> this.props.deleteStream(id)} className=\"ui negative button\">Delete</button>\r\n            <Link to=\"/\" className=\"ui button\">Cancel</Link>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    renderContent(){\r\n        if(!this.props.stream){\r\n            return 'Are you sure you want to delete stream?'\r\n        }\r\n            return `Are you sure you want to delete stream with the title: ${this.props.stream.title}`\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div>\r\n            <Modal\r\n            title= 'Delete Stream'\r\n            content={this.renderContent()}\r\n            actions={this.renderActions()}\r\n            onDismiss= {()=> history.push('/')}\r\n             />\r\n        </div>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchStream, deleteStream}) (StreamDelete);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchStreams } from '../../actions';\r\n\r\n\r\n\r\nclass StreamList extends React.Component{\r\n    componentDidMount(){\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream){\r\n        if(stream.userId === this.props.currentUserId){\r\n            return (\r\n               <div className=\"right floated content\">\r\n                   <Link to ={`/streams/edit/${stream.id}`} \r\n                   className=\"ui button primary\">Edit</Link>\r\n                   <Link \r\n                   to={`/streams/delete/${stream.id}`}\r\n                   className=\"ui button negative\">Delete</Link>\r\n               </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.streams.map((stream) => {\r\n            return (\r\n                <div className =\"item\" key={stream.id}>\r\n                      {this.renderAdmin(stream)}\r\n                 <i className=\"large middle aligned icon camera\" />\r\n            <div className=\"content\">\r\n               <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                {stream.title}\r\n                </Link>\r\n            <div className=\"description\">{stream.description}</div>\r\n            </div>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    renderCreate(){\r\n        if (this.props.isSignedIn){\r\n            return(\r\n                <div style={{textAlign: 'right'}}>\r\n                    <Link to =\"/streams/new\" className=\"ui button primary\">\r\n                    Create Stream\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n        <div className=\"ui celled list\">{this.renderList()}</div>\r\n          {this.renderCreate()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n         streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchStreams}) (StreamList);","import React from 'react';\r\nimport flv from 'flv.js';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\n\r\n\r\n\r\nclass StreamShow extends React.Component{\r\n      constructor(props){\r\n          super(props);\r\n\r\n          this.videoRef = React.createRef();\r\n      }\r\n\r\n    componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        this.props.fetchStream(id);\r\n\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.buildPlayer();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.player.destroy();\r\n    }\r\n\r\n    buildPlayer(){\r\n        if(this.player || !this.props.stream){\r\n            return;\r\n        }\r\n        const { id } = this.props.match.params;\r\n        this.player = flv.createPlayer({\r\n            type:'flv',\r\n            url: `http://localhost:8000/live/${id}.flv`\r\n        });\r\n        this.player.attachMediaElement(this.videoRef.current);\r\n        this.player.load();\r\n    }\r\n\r\n    render(){\r\n        if(!this.props.stream){\r\n            return <div>Loading...</div>\r\n        }\r\n\r\n        const { title, description } = this.props.stream;\r\n        return(\r\n            <div>\r\n                <video ref={this.videoRef} style={{width: '100%'}} controls/>\r\n                <h1>{title}</h1>\r\n               <h5>{description}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchStream}) (StreamShow);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\n\r\nclass GoogleAuth extends React.Component{\r\n         componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n           window.gapi.client.init({\r\n              clientId: '884191228093-poguafsi0degeuq5jt1l1ibhhs6ijjco.apps.googleusercontent.com',\r\n              scope: 'email'\r\n           }).then(() => {\r\n               this.auth = window.gapi.auth2.getAuthInstance();\r\n               this.onAuthChange(this.auth.isSignedIn.get());\r\n               this.auth.isSignedIn.listen(this.onAuthChange);\r\n           });\r\n        });\r\n    };\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if(isSignedIn){\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n        }else{\r\n           this.props.signOut(); \r\n        }\r\n    };\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    }\r\n\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    }\r\n\r\n    renderAuthButton() {\r\n        if(this.props.isSignedIn === null) {\r\n            return null;\r\n        }else if(this.props.isSignedIn){\r\n            return (\r\n                <button onClick = {this.onSignOutClick} className = \"ui red google button\">\r\n                    <i className = \"google icon\" /> Sign Out\r\n                </button>\r\n            );\r\n        }else {\r\n            return (\r\n                <button onClick = {this.onSignInClick} className = \"ui red google button\">\r\n                    <i className =\"google icon\" /> Sign In with Google\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n    render () {\r\n        return (\r\n        <div>{this.renderAuthButton()}</div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {isSignedIn: state.auth.isSignedIn}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {signIn, signOut}) (GoogleAuth);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className = \"ui secondary pointing menu \">\r\n            <Link to =\"/\" className =\"item\">Streamer</Link>\r\n            <div className=\"right menu\">\r\n                <Link to = \"/\" className = \"item\">All Streams</Link>\r\n                <GoogleAuth />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Router,  Route, Switch } from 'react-router-dom';\r\nimport StreamCreate from './streams/StreamCreate';\r\nimport StreamEdit from './streams/StreamEdit';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history'\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className = \"ui container\">\r\n         <Router history={history}>\r\n             <div>\r\n             <Header />\r\n             <Switch>\r\n             <Route path = \"/\" exact component = {StreamList} />\r\n             <Route path = \"/streams/new\" exact component = {StreamCreate} />\r\n             <Route path = \"/streams/edit/:id\" exact component = {StreamEdit} />\r\n             <Route path = \"/streams/delete/:id\" exact component = {StreamDelete} />\r\n             <Route path = \"/streams/:id\" exact component = {StreamShow} />\r\n             </Switch>\r\n             </div>\r\n         </Router>\r\n         </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","import {SIGN_IN, SIGN_OUT} from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n};\r\n \r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return {...state, isSignedIn: true, userId: action.payload};\r\n        case SIGN_OUT:\r\n            return {...state, isSignedIn: false, userId: null}; \r\n        default:\r\n            return state;       \r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    streams: streamReducer\r\n});","import _ from 'lodash';\r\nimport {\r\n    FETCH_STREAM,\r\n    FETCH_STREAMS,\r\n    CREATE_STREAM,\r\n    EDIT_STREAM,\r\n    DELETE_STREAM\r\n} from '../actions/types';\r\n\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_STREAMS:\r\n            return {...state, ..._.mapKeys(action.payload, 'id')}\r\n        case FETCH_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case CREATE_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case EDIT_STREAM:\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case DELETE_STREAM:\r\n            return _.omit(state, action.payload);    \r\n        default:\r\n            return state;            \r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n <Provider store = {store}>\r\n<App />\r\n</Provider>, document.querySelector('#root'));"],"sourceRoot":""}